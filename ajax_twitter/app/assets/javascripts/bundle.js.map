{"version":3,"sources":["webpack/bootstrap 3c452f88334c79952803","./frontend/twitter.js","./frontend/follow_toggle.js","./frontend/api_util.js","./frontend/infinite_tweets.js","./frontend/tweet_compose.js","./frontend/users_search.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uEAAsE;AACtE,EAAC;;;;;;;ACVD;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;;;;AC9DA;;AAEA;;AAEA;;AAEA;AACA;AACA,sBAAqB,GAAG;AACxB;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;;;;;;AC1CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;;;;;;;ACpDA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAwC,kBAAkB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC5DA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA,iCAAgC,QAAQ;;AAExC;AACA;AACA;AACA;AACA,QAAO;;;AAGP;AACA;AACA;;;AAGA;AACA,MAAK;;AAEL;;;AAGA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3c452f88334c79952803","const FollowToggle = require('./follow_toggle');\nconst InfiniteTweets = require('./infinite_tweets');\nconst TweetCompose = require('./tweet_compose');\nconst UsersSearch = require('./users_search');\n\n$(function () {\n  $(\"div.infinite-tweets\").each( (i, tweet) => new InfiniteTweets(tweet) );\n  $(\"form.tweet-compose\").each( (i, form) => new TweetCompose(form) );\n  $(\"nav.users-search\").each( (i, search) => new UsersSearch(search) );\n  $(\"button.follow-toggle\").each( (i, btn) => new FollowToggle(btn, {}) );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/twitter.js\n// module id = 0\n// module chunks = 0","const APIUtil = require('./api_util');\n\n\n\nclass FollowToggle {\n  constructor(el, options) {\n    this.$el = $(el);\n    this.userId = this.$el.data(\"user-id\") || options.userId;\n    this.followState = (this.$el.data(\"initial-follow-state\") || options.followState);\n\n    this.render();\n    this.$el.on(\"click\", this.handleClick.bind(this));\n  }\n\n  handleClick(event) {\n    const followToggle = this;\n\n    event.preventDefault();\n\n    if (this.followState === \"unfollowed\") {\n      this.followState = \"following\";\n      this.render();\n      APIUtil.followUser(this.userId).then(() => {\n        followToggle.followState = \"followed\";\n        followToggle.render();\n      } );\n    } else if (this.followState === \"followed\") {\n        this.followState = \"unfollowing\";\n        this.render();\n        APIUtil.unfollowUser(this.userId).then(() => {\n          followToggle.followState = \"unfollowed\";\n          followToggle.render();\n        } );\n    }\n  }\n\n\n  render() {\n\n    switch(this.followState) {\n      case \"followed\":\n        this.$el.prop(\"disabled\", false);\n        this.$el.html(\"Unfollow\");\n        break;\n      case \"unfollowed\":\n        this.$el.prop(\"disabled\", false)\n        this.$el.html(\"Follow\");\n        break;\n      case \"following\":\n        this.$el.prop(\"disabled\", true);\n        this.$el.html(\"Following\");\n        break;\n      case \"unfollowing\":\n        this.$el.prop(\"disabled\", true);\n        this.$el.html(\"Unfollowing\");\n        break;\n\n    }\n  }\n}\n\n\nmodule.exports = FollowToggle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/follow_toggle.js\n// module id = 1\n// module chunks = 0","const APIUtil = {\n\n  followUser: id => APIUtil.changeFollowStatus(id, \"POST\"),\n\n  unfollowUser: id => APIUtil.changeFollowStatus(id, \"DELETE\"),\n\n  changeFollowStatus: (id, method) => (\n    $.ajax({\n      url: `/users/${id}/follow`,\n      dataType: \"json\",\n      method\n    })\n  ),\n\n  searchUsers: query => (\n    $.ajax({\n      url: \"/users/search\",\n      dataType: \"json\",\n      method: \"GET\",\n      data: { query }\n    })\n  ),\n\n  createTweet: data => (\n    $.ajax({\n      url: \"/tweets\",\n      method: \"POST\",\n      dataType: \"json\",\n      data\n    })\n  ),\n\n  fetchTweets: data => (\n    $.ajax({\n      url: \"/feed\",\n      method: \"GET\",\n      dataType: \"json\",\n      data\n    })\n  )\n};\n\nmodule.exports = APIUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/api_util.js\n// module id = 2\n// module chunks = 0","const APIUtil = require('./api_util');\n\nclass InfiniteTweets {\n  constructor(el) {\n    this.$el = $(el);\n    this.lastCreatedAt = null;\n\n    this.$el.on(\"click\", \".fetch-more\", this.fetchTweets.bind(this));\n    this.$el.on(\"insert-tweet\", this.insertTweet.bind(this));\n  }\n\n  fetchTweets(event) {\n    event.preventDefault();\n\n    const infiniteTweets = this;\n    const data = {};\n    if (this.lastCreatedAt) data.max_created_at = this.lastCreatedAt;\n\n    APIUtil.fetchTweets(data).then((data) => {\n      infiniteTweets.insertTweets(data);\n\n      if (data.length < 20) {\n        infiniteTweets.$el.find(\".fetch-more\")\n                          .replaceWith(\"<b>No more tweets!</b>\");\n      }\n\n      if (data.length > 0) {\n        infiniteTweets.lastCreatedAt = data[data.length - 1].created_at;\n      }\n    });\n  }\n\n  insertTweet(event, data) {\n    const tmpl = _.template(this.$el.find(\"script\").html());\n    this.$el.find(\"ul.tweets\").prepend(tmpl({\n      tweets: [data]\n    }));\n\n    if (!this.lastCreatedAt) {\n      this.lastCreatedAt = data.created_at;\n    }\n  }\n\n  insertTweets(data) {\n    const tmpl = _.template(this.$el.find(\"script\").html());\n    this.$el.find(\"ul.tweets\").append(tmpl({\n      tweets: data\n    }));\n  }\n\n}\n\nmodule.exports = InfiniteTweets;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/infinite_tweets.js\n// module id = 3\n// module chunks = 0","const APIUtil = require('./api_util');\n\nclass TweetCompose {\n  constructor(el) {\n    this.$el = $(el);\n\n    this.$input = this.$el.find(\"textarea[name=tweet\\\\[content\\\\]]\");\n    this.$input.on(\"input\", this.handleInput.bind(this));\n\n    this.$mentionedUsersDiv = this.$el.find(\".mentioned-users\");\n    this.$el.find(\"a.add-mentioned-user\").on(\n      \"click\", this.addMentionedUser.bind(this));\n    this.$mentionedUsersDiv.on(\n      \"click\", \"a.remove-mentioned-user\", this.removeMentionedUser.bind(this));\n\n    this.$el.on(\"submit\", this.submit.bind(this));\n  }\n\n  addMentionedUser(event) {\n    event.preventDefault();\n\n    const $mentionedUserSelect = $(this.$mentionedUsersDiv.find(\"script\").html());\n    this.$mentionedUsersDiv.find(\"ul\").append($mentionedUserSelect);\n    return false;\n  }\n\n  clearInput() {\n    this.$input.val(\"\");\n    this.$mentionedUsersDiv.find(\"ul\").empty();\n    this.$el.find(\":input\").prop(\"disabled\", false);\n    this.$el.find(\".char-left\").empty();\n  }\n\n  handleInput(event) {\n    const inputLength = this.$input.val().length;\n\n    this.$el.find(\".char-left\").text(`${140 - inputLength} characters left`);\n  }\n\n  handleSuccess(data) {\n    const $tweetsUl = $(this.$el.data(\"tweets-ul\"));\n    $tweetsUl.trigger(\"insert-tweet\", data);\n    this.clearInput();\n  }\n\n  removeMentionedUser(event) {\n    event.preventDefault();\n    $(event.currentTarget).parent().remove();\n  }\n\n  submit(event) {\n    event.preventDefault();\n\n    const data = this.$el.serializeJSON();\n    this.$el.find(\":input\").prop(\"disabled\", true);\n\n    APIUtil.createTweet(data).then(tweet => this.handleSuccess(tweet));\n  }\n}\n\nmodule.exports = TweetCompose;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/tweet_compose.js\n// module id = 4\n// module chunks = 0","const APIUtil = require('./api_util');\n\nconst FollowToggle = require('./follow_toggle');\n\nclass UsersSearch {\n  constructor(el) {\n    this.$el = $(el)\n    this.$input = this.$el.find(\"input[name=username]\");\n    this.$ul = this.$el.find(\".users\");\n\n    this.$input.on(\"input\", this.handleInput.bind(this));\n\n  }\n\n  handleInput(event) {\n    if (this.$input.val() === \"\") {\n      this.renderResults([]);\n      return;\n    }\n\n    APIUtil.searchUsers(this.$input.val()).then(users => this.renderResults(users));\n  }\n\n  renderResults(users) {\n    this.$ul.empty();\n\n\n    users.forEach(user => {\n\n      let $a = $(\"<a></a>\");\n      $a.text(user.username);\n      $a.attr(\"href\", `/users/${user.id}`);\n\n      let $followToggle = $(\"<button></button>\");\n      new FollowToggle($followToggle, {\n        userId: user.id,\n        followState: user.followed ? \"followed\" : \"unfollowed\"\n      });\n\n\n      let $li = $(\"<li></li>\");\n      $li.append($a);\n      $li.append($followToggle);\n\n\n      this.$ul.append($li);\n    })\n\n  }\n\n\n}\n\nmodule.exports = UsersSearch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/users_search.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}